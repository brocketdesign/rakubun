extends ../base

block mainContent
  .container-fluid
    .row
      .col-md-3.bg-light
        .sidebar.py-3
          form#uploadForm(enctype="multipart/form-data")
            .mb-2
              label.form-label(for="pdf") アップロードするファイルを選択してください
              input.form-control(type="file", id="pdf", name="pdf", accept=".pdf", required)
            button.btn.btn-sm.btn-secondary(type="submit")
              i.bi.bi-upload.me-2
              | アップロード
          hr
          ul.list-group.mt-3#fileList
            each file in files
              li.list-group-item.border.rounded.mb-1
                .file-container
                  span.file-name.file-item(data-id=file._id) #{file.originalname}
                  .d-flex.justify-content-between.mt-2
                    div
                      button.btn.btn-sm.btn-secondary.preview-pdf.me-2(data-id=file._id title="プレビュー")
                        i.bi.bi-eye
                    button.btn.btn-sm.btn-secondary.delete-file(data-id=file._id title="削除")
                      i.bi.bi-trash

      .col-md-9
        .pdf-preview-container#pdfViewerContainer(style="display: none;")
          canvas#pdfViewerCanvas
        .chat-container.mt-3
          .messages
          .input-group.mt-2
            input.form-control#userMessage(type="text", placeholder="メッセージを入力してください")
            button.btn.btn-primary#sendMessage
              i.bi.bi-send

  script(src="https://code.jquery.com/jquery-3.6.0.min.js")
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js")
  script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js")
  script(src="https://cdn.jsdelivr.net/npm/marked/marked.min.js")
  style.
    .messages {
      max-height: 500px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
    }
    .message {
      padding: 10px;
      border-radius: 5px;
      margin-bottom: 10px;
      max-width: 80%;
      word-wrap: break-word;
    }
    .user-message {
      background-color: #f8f9fa; /* Bootstrap bg-light */
      align-self: flex-end;
    }
    .assistant-message {
      background-color: transparent;
      align-self: flex-start;
    }
  script.
    $(document).ready(function() {
      var currentFileId = null;

      $(document).on('submit', '#uploadForm', function(e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
          url: '/api/pdfsummary/upload',
          type: 'POST',
          data: formData,
          processData: false,
          contentType: false,
          success: function(data) {
            var file = data.file;
            var listItem = $('<li class="list-group-item border rounded mb-1"></li>');
            var fileContainer = $('<div class="file-container"></div>');
            var fileName = $('<span class="file-name file-item"></span>').text(file.originalname).attr('data-id', file._id);
            var btnGroup = $('<div class="d-flex justify-content-between mt-2"></div>');
            var btnDiv = $('<div></div>');
            var previewBtn = $('<button class="btn btn-sm btn-secondary preview-pdf me-2" title="プレビュー"></button>')
              .attr('data-id', file._id)
              .html('<i class="bi bi-eye"></i>');
            var deleteBtn = $('<button class="btn btn-sm btn-secondary delete-file" title="削除"></button>')
              .attr('data-id', file._id)
              .html('<i class="bi bi-trash"></i>');

            btnDiv.append(previewBtn);
            btnGroup.append(btnDiv, deleteBtn);
            fileContainer.append(fileName, btnGroup);
            listItem.append(fileContainer);
            $('#fileList').append(listItem);
            showNotification('ファイルがアップロードされました', 'success');
          },
          error: function() {
            showNotification('ファイルのアップロードに失敗しました', 'error');
          }
        });
      });

      $(document).on('click', '.preview-pdf', function() {
        var id = $(this).data('id');
        $.get('/api/pdfsummary/get/' + id, function(data) {
          var url = data.s3Url;
          $('#pdfViewerContainer').show();
          var loadingTask = pdfjsLib.getDocument(url);
          loadingTask.promise.then(function(pdf) {
            pdf.getPage(1).then(function(page) {
              var scale = 1.5;
              var viewport = page.getViewport({ scale: scale });
              var canvas = document.getElementById('pdfViewerCanvas');
              var context = canvas.getContext('2d');
              canvas.height = viewport.height;
              canvas.width = viewport.width;
              var renderContext = {
                canvasContext: context,
                viewport: viewport
              };
              page.render(renderContext);
            });
          });
        });
      });

      $(document).on('click', '.file-item', function() {
        var id = $(this).data('id');
        currentFileId = id;
        $('.messages').empty();

        $.get('/api/pdfsummary/history/' + id, function(data) {
          data.chatHistory.forEach(function(message) {
            var messageClass = message.role === 'user' ? 'user-message' : 'assistant-message';
            var msgDiv = $('<div class="message ' + messageClass + '"></div>');
            if (message.role === 'assistant') {
              // Convert Markdown to HTML
              var htmlContent = marked.parse(message.content);
              msgDiv.html(htmlContent);
            } else {
              msgDiv.text(message.content);
            }
            $('.messages').append(msgDiv);
          });
          // Scroll to bottom
          $('.messages').scrollTop($('.messages')[0].scrollHeight);
        });
      });

      $(document).on('click', '#sendMessage', function() {
        var message = $('#userMessage').val();
        if (message && currentFileId) {
          var userMsg = $('<div class="message user-message"></div>').text(message);
          $('.messages').append(userMsg);
          $('#userMessage').val('');

          fetch('/api/pdfsummary/chat/' + currentFileId, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ message: message })
          })
          .then(async response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            const reader = response.body.getReader();
            const decoder = new TextDecoder('utf-8');
            let assistantMsgDiv = $('<div class="message assistant-message"></div>');
            $('.messages').append(assistantMsgDiv);

            let content = '';
            while (true) {
              const { done, value } = await reader.read();
              if (done) break;
              content += decoder.decode(value, { stream: true });

              // Convert Markdown to HTML
              const htmlContent = marked.parse(content);
              assistantMsgDiv.html(htmlContent);

              // Scroll to bottom
              $('.messages').scrollTop($('.messages')[0].scrollHeight);
            }
          })
          .catch(error => {
            console.error('Error:', error);
          });
        }
      });

      $(document).on('click', '.delete-file', function() {
        var id = $(this).data('id');
        var listItem = $(this).closest('li');
        $.post('/api/pdfsummary/delete/' + id, function() {
          listItem.remove();
          showNotification('ファイルが削除されました', 'success');
          if (currentFileId === id) {
            currentFileId = null;
            $('.messages').empty();
            $('#pdfViewerContainer').hide();
          }
        });
      });

      function showNotification(message, icon) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: icon,
          title: message,
          showConfirmButton: false,
          timer: 1500
        });
      }
    });
