extends ../../base

block mainContent
    #articleEditContainer.container.mt-5
        form#articleEditForm
            input#articleId(type="hidden" value=article._id)
            .mb-4
                label(for="articleTitle") タイトル
                    i.bi.bi-info-circle.ms-2(text-muted data-bs-toggle="tooltip" data-bs-placement="right" title="タイトルはSEOに重要です。キーワードを含めてください。")
                input#articleTitle.form-control(type="text", name="title", value=article.title, placeholder="記事のタイトルを入力")
            .mb-4
                label(for="articleSlug") スラグ
                    i.bi.bi-info-circle.ms-2(text-muted data-bs-toggle="tooltip" data-bs-placement="right" title="スラグはURLに使用されます。短く分かりやすく。")
                input#articleSlug.form-control(type="text", name="slug", value=article.slug, placeholder="スラグを入力")
            .mb-4
                label(for="articleContent") コンテンツ
                    i.bi.bi-info-circle.ms-2(text-muted data-bs-toggle="tooltip" data-bs-placement="right" title="コンテンツは質が高く、キーワードを適切に含めてください。")
                textarea#articleContent.form-control(name="content", rows="10") #{article.content}
            .mb-4.d-flex.justify-content-start.gap-3
                button#saveButton.btn.btn-primary(type="button") 保存
                button#postButton.btn.btn-success(type="button") 投稿
                    span.spinner-border.spinner-border-sm.d-none.ms-2(role="status" aria-hidden="true")

    // Include TinyMCE and Marked.js scripts
    script(src="https://cdn.tiny.cloud/1/9t4li7yzu8rpqw0jc0ti8n8dqjmdq0kahece8yruouajveun/tinymce/7/tinymce.min.js" referrerpolicy="origin")
    script(src="https://cdn.jsdelivr.net/npm/marked/marked.min.js")

    script.
        $(document).ready(function() {
            const article = !{JSON.stringify(article)};
            
            tinymce.init({
                selector: '#articleContent',
                height: 500,
                menubar: false,
                plugins: 'lists link image preview',
                toolbar: 'undo redo | formatselect | bold italic | alignleft aligncenter alignright | bullist numlist | link image | preview',
                setup: function (editor) {
                    editor.on('init', function () {
                        const htmlContent = marked.parse(article.content);
                        editor.setContent(htmlContent, { format: 'html' });
                    });
                }
            });
        
            function saveArticle(data) {
                $.ajax({
                    url: '/api/autoblog/article/' + data.articleId,
                    method: 'POST',
                    data: data,
                    success: function(response) {
                        if (response.success) {
                            showNotification('記事が正常に保存されました', 'success');
                        }
                    },
                    error: function() {}
                });
            }

            function handleSave() {
                const content = tinymce.get('articleContent').getContent({ format: 'html' });
                const data = {
                    articleId: $('#articleId').val(),
                    title: $('#articleTitle').val(),
                    slug: $('#articleSlug').val(),
                    content: content
                };
                saveArticle(data);
            }

            function postArticle() {
                const postButton = $('#postButton');
                const spinner = postButton.find('.spinner-border');
                postButton.prop('disabled', true);
                spinner.removeClass('d-none');
                
                const articleId = $('#articleId').val();
                $.ajax({
                    url: '/api/autoblog/article/post/' + articleId,
                    method: 'POST',
                    success: function(response) {
                        if (response.success) {
                            showNotification('記事が正常に投稿されました', 'success');
                        }
                    },
                    error: function() {},
                    complete: function() {
                        postButton.prop('disabled', false);
                        spinner.addClass('d-none');
                    }
                });
            }

            $('#saveButton').on('click', function() {
                handleSave();
            });

            $('#postButton').on('click', function() {
                postArticle();
            });

            $(document).on('keydown', function(e) {
                if (e.ctrlKey && e.key === 's') {
                    e.preventDefault();
                    handleSave();
                }
            });

            // Initialize Bootstrap tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
              return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });
