extends ../base

block mainContent
  .container-fluid
    .row
      .col-md-3.bg-light
        .sidebar.py-3
          h5 サイドバー
          hr
          form(id="uploadForm", enctype="multipart/form-data")
            input(type="file", name="audio", accept=".mp3, .wav", required)
            button.btn.btn-primary(type="submit")
              i.bi.bi-upload 
              |  アップロード
          hr
          ul.list-group.mt-3
            each file in files
              li.list-group-item
                .d-flex.justify-content-between.align-items-center
                  span.file-name.file-item(data-id=file._id) #{file.originalname}
                  div
                    button.btn.btn-sm.btn-success.start-transcription(data-id=file._id title="文字起こし開始" data-bs-toggle="tooltip")
                      i.bi.bi-play-circle
                    button.btn.btn-sm.btn-warning.rename-file(data-id=file._id title="名前変更" data-bs-toggle="tooltip")
                      i.bi.bi-pencil-square
                    button.btn.btn-sm.btn-danger.delete-file(data-id=file._id title="削除" data-bs-toggle="tooltip")
                      i.bi.bi-trash
      .col-md-9
        .editor
          h5 エディタ
          hr
          textarea#editor
            if files.length && files[0].transcription
              = files[0].transcription
          button.btn.btn-primary.mt-2#saveTranscription 保存

  script(src="https://cdn.tiny.cloud/1/9t4li7yzu8rpqw0jc0ti8n8dqjmdq0kahece8yruouajveun/tinymce/7/tinymce.min.js" referrerpolicy="origin")
  script.
    tinymce.init({
      selector: '#editor',
      height: 500,
      menubar: false,
      plugins: 'lists link image preview',
      toolbar: 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat',
    });
  script(src="https://code.jquery.com/jquery-3.6.0.min.js")
  script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js")
  script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
  script.
    $(document).ready(function() {
      var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
      });
    });

    $(document).on('submit', '#uploadForm', function(e) {
      e.preventDefault();
      var formData = new FormData(this);
      $.ajax({
        url: '/api/transcription/upload',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(data) {
          showNotification('ファイルがアップロードされました', 'success');
          var file = data.file;
          var li = $('<li class="list-group-item"></li>');
          var div = $('<div class="d-flex justify-content-between align-items-center"></div>');
          var span = $('<span class="file-name file-item"></span>').text(file.originalname).attr('data-id', file._id);
          var btnDiv = $('<div></div>');
          var transcribeBtn = $('<button class="btn btn-sm btn-success start-transcription" title="文字起こし開始" data-bs-toggle="tooltip"></button>')
            .attr('data-id', file._id)
            .html('<i class="bi bi-play-circle"></i>');
          var renameBtn = $('<button class="btn btn-sm btn-warning rename-file" title="名前変更" data-bs-toggle="tooltip"></button>')
            .attr('data-id', file._id)
            .html('<i class="bi bi-pencil-square"></i>');
          var deleteBtn = $('<button class="btn btn-sm btn-danger delete-file" title="削除" data-bs-toggle="tooltip"></button>')
            .attr('data-id', file._id)
            .html('<i class="bi bi-trash"></i>');
          btnDiv.append(transcribeBtn, renameBtn, deleteBtn);
          div.append(span, btnDiv);
          li.append(div);
          $('ul.list-group').append(li);
        }
      });
    });

    $(document).on('click', '.start-transcription', function() {
      var id = $(this).data('id');
      var button = $(this);
      $.post('/api/transcription/transcribe/' + id, function() {
        showNotification('文字起こしを開始しました', 'success');
        button.html('<i class="bi bi-hourglass-split"></i>').prop('disabled', true);
        pollTranscriptionStatus(id, button);
      });
    });

    function pollTranscriptionStatus(id, button) {
      $.get('/api/transcription/status/' + id, function(data) {
        if (data.transcription) {
          tinymce.get('editor').setContent(data.transcription);
          button.html('<i class="bi bi-play-circle"></i>').prop('disabled', false);
          showNotification('文字起こしが完了しました', 'success');
          $('#saveTranscription').data('id', id);
        } else {
          setTimeout(function() {
            pollTranscriptionStatus(id, button);
          }, 5000);
        }
      });
    }

    $(document).on('click', '.rename-file', function() {
      var id = $(this).data('id');
      var span = $('.file-name[data-id="' + id + '"]');
      Swal.fire({
        title: '新しい名前を入力してください',
        input: 'text',
        inputValue: span.text(),
        showCancelButton: true,
      }).then((result) => {
        if (result.isConfirmed) {
          $.post('/api/transcription/rename/' + id, { newName: result.value }, function() {
            showNotification('ファイル名が変更されました', 'success');
            span.text(result.value);
          });
        }
      });
    });

    $(document).on('click', '.delete-file', function() {
      var id = $(this).data('id');
      Swal.fire({
        title: '本当に削除してもよろしいですか？',
        icon: 'warning',
        showCancelButton: true,
      }).then((result) => {
        if (result.isConfirmed) {
          $.post('/api/transcription/delete/' + id, function() {
            showNotification('ファイルが削除されました', 'success');
            $('li.list-group-item').has('button[data-id="' + id + '"]').remove();
          });
        }
      });
    });

    $(document).on('click', '.file-item', function() {
      var id = $(this).data('id');
      $.get('/api/transcription/get/' + id, function(data) {
        if (data.transcription) {
          tinymce.get('editor').setContent(data.transcription);
        } else {
          tinymce.get('editor').setContent('');
        }
        $('#saveTranscription').data('id', id);
      });
    });

    $(document).on('click', '#saveTranscription', function() {
      var id = $(this).data('id');
      var content = tinymce.get('editor').getContent();
      if (id) {
        $.post('/api/transcription/save/' + id, { transcription: content }, function() {
          showNotification('文字起こしが保存されました', 'success');
        });
      } else {
        showNotification('ファイルが選択されていません', 'error');
      }
    });

    function showNotification(message, icon) {
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: icon,
        title: message,
        showConfirmButton: false,
        timer: 1500
      });
    }
